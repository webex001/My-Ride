import { tailwindLabsPlugins } from '../lib/tailwindlabs-plugins';
export declare type Accessibility = Record<TAccessibilityCategoryItem, string[]>;
export declare type Backgrounds = Record<TBackgroundsCategoryItem, string[]>;
export declare type Borders = Record<TBordersCategoryItem, string[]>;
export declare type Effects = Record<TEffectsCategoryItem, string[]>;
export declare type Filters = Record<TFiltersCategoryItem, string[]>;
export declare type FlexBox = Record<TFlexBoxCategoryItem, string[]>;
export declare type Grid = Record<TGridCategoryItem, string[]>;
export declare type Interactivity = Record<TInteractivityCategoryItem, string[]>;
export declare type Layout = Record<TLayoutCategoryItem, string[]>;
export declare type Sizing = Record<TSizingCategoryItem, string[]>;
export declare type Spacing = Record<TSpacingCategoryItem, string[]>;
export declare type SVG = Record<TSVGCategoryItem, string[]>;
export declare type Tables = Record<TTablesCategoryItem, string[]>;
export declare type Transforms = Record<TTransformsCategoryItem, string[]>;
export declare type TransitionsAndAnimations = Record<TTransitionsAndAnimationsCategoryItem, string[]>;
export declare type Typography = Record<TTypographyCategoryItem, string[]>;
export declare type TGeneratedClassnames = {
    regularClassnames: TAllClassnames;
    pseudoClassnames: string[];
};
export declare type TAllClassnames = {
    Accessibility: Accessibility;
    Backgrounds: Backgrounds;
    Borders: Borders;
    Effects: Effects;
    Filters: Filters;
    FlexBox: FlexBox;
    Grid: Grid;
    Interactivity: Interactivity;
    Layout: Layout;
    Sizing: Sizing;
    Spacing: Spacing;
    SVG: SVG;
    Tables: Tables;
    Transforms: Transforms;
    TransitionsAndAnimations: TransitionsAndAnimations;
    Typography: Typography;
    TailwindLabsPlugins?: Partial<typeof tailwindLabsPlugins>;
};
declare type TAccessibilityCategoryItem = 'screenReaders';
declare type TBackgroundsCategoryItem = 'backgroundAttachment' | 'backgroundClip' | 'backgroundColor' | 'backgroundOpacity' | 'backgroundPosition' | 'backgroundRepeat' | 'backgroundSize' | 'backgroundImage' | 'gradientColorStops';
declare type TBordersCategoryItem = 'borderColor' | 'borderOpacity' | 'borderStyle' | 'borderWidth' | 'borderRadius' | 'divideWidth' | 'divideOpacity' | 'divideColor' | 'divideStyle' | 'ringColor' | 'ringOpacity' | 'ringOffsetColor' | 'ringOffsetWidth' | 'ringWidth';
declare type TEffectsCategoryItem = 'boxShadow' | 'opacity' | 'mixBlendMode' | 'backgroundBlendMode';
declare type TFiltersCategoryItem = 'filter' | 'backdropFilter' | 'blur' | 'brightness' | 'contrast' | 'dropShadow' | 'grayscale' | 'hueRotate' | 'invert' | 'saturate' | 'sepia' | 'backdropFilter' | 'backdropBlur' | 'backdropBrightness' | 'backdropContrast' | 'backdropGrayscale' | 'backdropHueRotate' | 'backdropInvert' | 'backdropOpacity' | 'backdropSaturate' | 'backdropSepia';
declare type TFlexBoxCategoryItem = 'flexDirection' | 'flexWrap' | 'alignItems' | 'alignContent' | 'alignSelf' | 'placeContent' | 'placeItems' | 'placeSelf' | 'justifyContent' | 'justifyItems' | 'justifySelf' | 'flex' | 'flexGrow' | 'flexShrink' | 'order';
declare type TGridCategoryItem = 'gridTemplateColumns' | 'gridAutoColumns' | 'gridColumn' | 'gridColumnStart' | 'gridColumnEnd' | 'gridTemplateRows' | 'gridAutoRows' | 'gridRow' | 'gridRowStart' | 'gridRowEnd' | 'gap' | 'gridAutoFlow';
declare type TInteractivityCategoryItem = 'appearance' | 'cursor' | 'outline' | 'pointerEvents' | 'resize' | 'userSelect';
declare type TLayoutCategoryItem = 'display' | 'boxDecorationBreak' | 'boxSizing' | 'container' | 'float' | 'clear' | 'isolation' | 'objectFit' | 'objectPosition' | 'overflow' | 'overscrollBehavior' | 'position' | 'inset' | 'visibility' | 'zIndex';
declare type TSizingCategoryItem = 'width' | 'minWidth' | 'maxWidth' | 'height' | 'minHeight' | 'maxHeight';
declare type TSpacingCategoryItem = 'padding' | 'margin' | 'space';
declare type TSVGCategoryItem = 'fill' | 'stroke' | 'strokeWidth';
declare type TTablesCategoryItem = 'borderCollapse' | 'tableLayout';
declare type TTransformsCategoryItem = 'scale' | 'rotate' | 'translate' | 'skew' | 'transformOrigin';
declare type TTransitionsAndAnimationsCategoryItem = 'transitionProperty' | 'transitionDuration' | 'transitionTimingFunction' | 'transitionDelay' | 'animation';
declare type TTypographyCategoryItem = 'fontFamily' | 'fontSize' | 'fontSmoothing' | 'fontStyle' | 'fontWeight' | 'fontVariantNumeric' | 'letterSpacing' | 'lineHeight' | 'listStyleType' | 'listStylePosition' | 'placeholderColor' | 'placeholderOpacity' | 'textAlign' | 'textColor' | 'textDecoration' | 'textOpacity' | 'textTransform' | 'verticalAlign' | 'whitespace' | 'wordBreak';
export {};
